{
  "hash": "122cd10999fbc55383ec00189b216945",
  "result": {
    "markdown": "---\ntitle: \"Pyramid plot with ToothGrowth\"\nauthor: \"Sean Ahn\"\ndate: \"2023-10-22\"\ncategories: [ggplot, visualization]\nimage: \"image.png\"\n---\n\n\nToday I'm gonna make pyramid plot. Typically this plot use comparing two classes at the same time. Maybe you guys saw pyramid plot comparing male and female population by age.  \n\nanyway, there is good blog post what pyramid plot. See the [Kawn's blog](https://www.kwanlin.com/blog/series-visualization/pyramid-plot/) 👍  \n\n## Initializing\n\nI usually use the following code for initialization. If you don't want to remove plots and/or variables, you can skip it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngraphics.off()\nrm(list = ls())\ngc()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          used (Mb) gc trigger (Mb) limit (Mb) max used (Mb)\nNcells  733617 39.2    1272932   68         NA  1272932 68.0\nVcells 1296773  9.9    8388608   64      16384  1899699 14.5\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nversion\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               _                           \nplatform       aarch64-apple-darwin20      \narch           aarch64                     \nos             darwin20                    \nsystem         aarch64, darwin20           \nstatus                                     \nmajor          4                           \nminor          3.1                         \nyear           2023                        \nmonth          06                          \nday            16                          \nsvn rev        84548                       \nlanguage       R                           \nversion.string R version 4.3.1 (2023-06-16)\nnickname       Beagle Scouts               \n```\n:::\n:::\n\n\n## Loading Useful Library\n\nWe want to use as few packages (some might call them \"libraries\") as possible. If possible, I'm going to use only the **tidyverse** package. [Tidyverse](https://www.tidyverse.org) is one of the most famous packages in R programming, and it's really powerful and useful.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n\n## Select Dataset\n\nWhen I write posts in my blog, I use the built-in dataset because I don't want the reader to suffer by having to find the data from somewhere else.\n\nThe dataset I'll be using in this post is shown below ⬇️ ⬇️ ⬇️.\n\n<br>\n\n**The Effect of Vitamin C on Tooth Growth in Guinea Pigs** \n\nDescription\nThe response is the length of odontoblasts (cells responsible for tooth growth) in 60 guinea pigs. Each animal received one of three dose levels of vitamin C (0.5, 1, and 2 mg/day) by one of two delivery methods, orange juice or ascorbic acid (a form of vitamin C and coded as VC).\n\nUsage   \nToothGrowth  \n\nFormat  \nA data frame with 60 observations on 3 variables.\n\n[,1]\tlen\tnumeric\tTooth length.  \n[,2]\tsupp\tfactor\tSupplement type (VC or OJ).  \n[,3]\tdose\tnumeric\tDose in milligrams/day.  \n\nSource  \nC. I. Bliss (1952). The Statistics of Bioassay. Academic Press.\n\nReferences  \nMcNeil, D. R. (1977). Interactive Data Analysis. New York: Wiley.\n\nCrampton, E. W. (1947). The growth of the odontoblast of the incisor teeth as a criterion of vitamin C intake of the guinea pig. The Journal of Nutrition, 33(5), 491–504. doi:10.1093/jn/33.5.491.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nToothGrowth |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   len supp dose\n1  4.2   VC  0.5\n2 11.5   VC  0.5\n3  7.3   VC  0.5\n4  5.8   VC  0.5\n5  6.4   VC  0.5\n6 10.0   VC  0.5\n```\n:::\n:::\n\n\nToothGrowth dataset is typical dataframe object.   \n\n\n::: {.cell}\n\n```{.r .cell-code}\nToothGrowth |> class()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"data.frame\"\n```\n:::\n:::\n\n\nand ToothGrowth is 60 rows and 3 columns.    \n\n\n::: {.cell}\n\n```{.r .cell-code}\nToothGrowth |> dim()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 60  3\n```\n:::\n:::\n\n\n## Visualization\n\nI saved `ToothGrowth` dataset into `df` variable.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- ToothGrowth\n```\n:::\n\n\ntry to make a simple histogram  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(df$len, main = \"Using native hist() function\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nall right! Now I'd like to make a histogram using `ggplot`.  \n\nNative-R `hist()` function shows 7 bars(= bins), so I define there are 7 bins in histogram.  \n\nI got it as below.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> \n  ggplot(aes(len)) + \n  geom_histogram(bins = 7, fill = \"gray80\", color = \"black\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nIn `ToothGrowth` dataset, there are 2(two) kind of supplement - Vitamin C or Orange Juice.  \n\nIf I need to compare tooth growth by supplement type, I would make a histogram like this.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> \n  ggplot(aes(len)) +\n  geom_histogram(bins = 7, fill = \"gray80\", color = \"black\") +\n  facet_wrap(vars(supp))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nor...\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> \n  ggplot(aes(len, fill = supp)) +\n  geom_histogram(bins = 7, position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nIt's too difficult to compare each other. \n\nUse `coord_flip()` to flip the coordinates, then draw one (vitamin C) facing left and the other (orange juice) facing right.  \n\nThe two histograms drawn with their backs to each other produce a pyramid plot.  \n\nThe key is that we used `after_stat(count)` to make the values with a certain value (vitamin C) negative.  \n\n:::{.callout-tip}\nIf you keep 7 bins in plot, there are some blank area. for example, Orange Juice(OJ) has no tooth length over 30.9.   \nWe don't need compare this kind of data.  \nSo I'll reduce number of bins 7 to 5.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> \n  ggplot(aes(len, fill = supp)) +\n  geom_histogram(data = subset(df, supp == \"OJ\"), bins = 5) +\n  geom_histogram(data = subset(df, supp == \"VC\"), aes(y = after_stat(count)*-1), bins = 5) +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nNow, all most done.\n\nI'll add title and necessary decoration in the plot. \n\nI finally pyramid plot.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> \n  ggplot(aes(len, fill = supp)) +\n  geom_histogram(data = subset(df, supp == \"OJ\"), bins = 5, fill = \"midnightblue\", color = \"white\") +\n  geom_histogram(data = subset(df, supp == \"VC\"), aes(y = after_stat(count)*-1), bins = 5, fill = \"darkred\", color = \"white\") +\n  coord_flip() +\n  scale_y_continuous(limits = c(-15, 15), breaks = seq(-15, 15, 5), labels = abs(seq(-15, 15, 5))) +\n  labs(title = \"The Effect of Vitamin C on Tooth Growth in Guinea Pigs\",\n       subtitle = \"The response is the length of odontoblasts (cells responsible for tooth growth) in 60 guinea pigs. \\n Each animal received one of three dose levels of vitamin C (0.5, 1, and 2 mg/day) \\n by one of two delivery methods, orange juice or ascorbic acid (a form of vitamin C \\n and coded as VC).\",\n       x = \"Count\", y = \"Tooth length\", fill = \"Supplement type (VC or OJ)\") +\n  theme_bw() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nGood job! 👍\n\n\n\n\n\n<div class=\"right\">\n__END OF POST__\n</div>\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}