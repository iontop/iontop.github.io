{
  "hash": "2113e67e41d6e6f484faecaf775689e5",
  "result": {
    "markdown": "---\ntitle: \"Strip plot with WorldPhones\"\nauthor: \"Sean Ahn\"\ndate: \"2024-01-22\"\ncategories: [ggplot, visualization]\nimage: \"image.png\"\n---\n\n\nToday we're going to draw a horizontal stacked bar graph.   \n\nA surprisingly common use of these plots is a single bar graph lying on its side, which I call a **\"strip plot\"**.  \n\nIt's useful when you want to fill in details when drawing a pie plot, or when you want to see approximate proportions and absolute values at once.  \n\n## Initializing\n\nI usually use the following code for initialization. If you don't want to remove plots and/or variables, you can skip it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngraphics.off()\nrm(list = ls())\ngc()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          used (Mb) gc trigger (Mb) limit (Mb) max used (Mb)\nNcells  585986 31.3    1339542 71.6         NA   669405 35.8\nVcells 1078765  8.3    8388608 64.0      16384  1851683 14.2\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nversion\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               _                           \nplatform       aarch64-apple-darwin20      \narch           aarch64                     \nos             darwin20                    \nsystem         aarch64, darwin20           \nstatus                                     \nmajor          4                           \nminor          3.1                         \nyear           2023                        \nmonth          06                          \nday            16                          \nsvn rev        84548                       \nlanguage       R                           \nversion.string R version 4.3.1 (2023-06-16)\nnickname       Beagle Scouts               \n```\n:::\n:::\n\n\n## Loading Useful Library\n\nWe want to use as few packages (some might call them \"libraries\") as possible. If possible, I'm going to use only the **tidyverse** package. [Tidyverse](https://www.tidyverse.org) is one of the most famous packages in R programming, and it's really powerful and useful.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n\n## Select Dataset\n\nWhen I write posts in my blog, I use the built-in dataset because I don't want the reader to suffer by having to find the data from somewhere else.\n\nThe dataset I'll be using in this post is shown below ⬇️ ⬇️ ⬇️.\n\n<br>\n\n**The World's Telephones** \n\nDescription\nThe number of telephones in various regions of the world (in thousands).  \n\nUsage   \nWorldPhones  \n\nFormat  \nA matrix with 7 rows and 8 columns. The columns of the matrix give the figures for a given region, and the rows the figures for a year.  \n\nThe regions are: North America, Europe, Asia, South America, Oceania, Africa, Central America.  \n\nThe years are: 1951, 1956, 1957, 1958, 1959, 1960, 1961.    \n\nSource  \nAT&T (1961) The World's Telephones.  \n\nReferences  \nMcNeil, D. R. (1977) Interactive Data Analysis. New York: Wiley.  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nWorldPhones |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     N.Amer Europe Asia S.Amer Oceania Africa Mid.Amer\n1951  45939  21574 2876   1815    1646     89      555\n1956  60423  29990 4708   2568    2366   1411      733\n1957  64721  32510 5230   2695    2526   1546      773\n1958  68484  35218 6662   2845    2691   1663      836\n1959  71799  37598 6856   3000    2868   1769      911\n1960  76036  40341 8220   3145    3054   1905     1008\n```\n:::\n:::\n\n\n`WorldPhones` dataset is typical matrix object.   \n\n\n::: {.cell}\n\n```{.r .cell-code}\nWorldPhones |> class()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"matrix\" \"array\" \n```\n:::\n:::\n\n\nLet's change to a dataframe to create a strip plot.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- as.data.frame(WorldPhones)\n```\n:::\n\n\nThe year is in the row name, but I removed the row name and brought it to the first column for convenient data manipulation in the future.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- df |> mutate(year = as.numeric(rownames(df)), .before = \"N.Amer\")\nrownames(df) <- NULL\n\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  year N.Amer Europe Asia S.Amer Oceania Africa Mid.Amer\n1 1951  45939  21574 2876   1815    1646     89      555\n2 1956  60423  29990 4708   2568    2366   1411      733\n3 1957  64721  32510 5230   2695    2526   1546      773\n4 1958  68484  35218 6662   2845    2691   1663      836\n5 1959  71799  37598 6856   3000    2868   1769      911\n6 1960  76036  40341 8220   3145    3054   1905     1008\n7 1961  79831  43173 9053   3338    3224   2005     1076\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"data.frame\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 7 8\n```\n:::\n:::\n\n\n## Visualization\n\n`WorldPhones` is a matrix, so you can easily draw a dot plot using the built-in function as shown below.  \n\nActually, it's not bad. 🤔   \n\n\n::: {.cell}\n\n```{.r .cell-code}\nbarplot(t(WorldPhones)[,7])\ntitle(main = \"World phones data in 1961\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nHowever, it would be more intuitive to represent the number of phones in each country on a single line with a length proportional to the number.  \nDrawing such a stacked bar chart is not easy with the built-in `barplot()` function.  \n\nThere are several ways to draw a single stacked bar plot (a.k.a. strip plot), but it is more convenient to use the geom_col() function than to use the geom_bar() function. \n\n\n::: {.callout-tip}\nIn this case, a tip is to leave the x-axis blank `aes(x = \"\")` for the aesthetic.  \n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> \n  filter(year == \"1961\") |> \n  pivot_longer(-year, names_to = \"region\", values_to = \"num_tele\") |> \n  ggplot(aes(x = \"\",y = num_tele, fill = region)) +\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nWe're almost there. Now you can reorient the plot, reduce its width, and fill it with a colour of your choice to create a strip plot.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> \n  filter(year == \"1961\") |> \n  pivot_longer(-year, names_to = \"region\", values_to = \"num_tele\") |> \n  ggplot(aes(x = \"\",y = reorder(num_tele, num_tele), fill = region)) +\n  geom_col(width = 0.5) +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nI added labels to make it easier to see the number of phones and rotated the labels to make them easier to read. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> \n  filter(year == \"1961\") |> \n  pivot_longer(-year, names_to = \"region\", values_to = \"num_tele\") |> \n  ggplot(aes(x = \"\",y = reorder(num_tele, num_tele), fill = region)) +\n  geom_col(width = 0.5) +\n  geom_text(aes(label = num_tele), angle = -90,\n            position = position_stack(vjust = 0.5)) +\n  scale_fill_brewer(palette = \"Set2\") +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nThe last step is to add a title and a few more embellishments to finish it off.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> \n  filter(year == \"1961\") |> \n  pivot_longer(-year, names_to = \"region\", values_to = \"num_tele\") |> \n  ggplot(aes(x = \"\",y = reorder(num_tele, num_tele), fill = region)) +\n  geom_col(width = 0.5) +\n  geom_text(aes(label = paste0(region,\"\\n\",num_tele)), angle = -90,\n            position = position_stack(vjust = 0.5)) +\n  scale_fill_brewer(palette = \"Set2\") +\n  coord_flip() +\n  labs(title = \"The World's Telephones at 1961\",\n       subtitle = \"The number of telephones in various regions of the world (in thousands).\",\n       fill = \"Region\") +\n  theme_void() +\n  theme(plot.margin = margin(80,10,50,10), legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nGood job! 👍\n\n\n\n\n\n<div class=\"right\">\n__END OF POST__\n</div>\n\n\n\n\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}