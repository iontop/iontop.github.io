[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "junho ahn blog",
    "section": "",
    "text": "Bar graph with ggplot2\n\n\n\n\n\n\n\ncode\n\n\n\n\n\n\n\n\n\n\n\nAug 19, 2023\n\n\nJunho (Sean) Ahn\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nAug 19, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nAug 16, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/nb_001/index.html",
    "href": "posts/nb_001/index.html",
    "title": "Notebook_001",
    "section": "",
    "text": "graphics.off()\nrm(list = ls())\ngc()\n\n          used (Mb) gc trigger (Mb) limit (Mb) max used (Mb)\nNcells  575172 30.8    1308648 69.9         NA   669400 35.8\nVcells 1049615  8.1    8388608 64.0      16384  1851626 14.2"
  },
  {
    "objectID": "posts/nb_001/index.html#load-useful-library",
    "href": "posts/nb_001/index.html#load-useful-library",
    "title": "Notebook_001",
    "section": "Load Useful Library",
    "text": "Load Useful Library\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nlibrary(scales)\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor"
  },
  {
    "objectID": "posts/nb_001/index.html#select-dataset",
    "href": "posts/nb_001/index.html#select-dataset",
    "title": "Notebook_001",
    "section": "Select Dataset",
    "text": "Select Dataset\nHair and Eye Color of Statistics Students\n\nDescription\nDistribution of hair and eye color and sex in 592 statistics students.\n\n\nUsage\nHairEyeColor\n\n\nFormat\nA 3-dimensional array resulting from cross-tabulating 592 observations on 3 variables. The variables and their levels are as follows:\nNo Name Levels 1 Hair Black, Brown, Red, Blond 2 Eye Brown, Blue, Hazel, Green 3 Sex Male, Female\n\n\nDetails\nThe Hair x Eye table comes from a survey of students at the University of Delaware reported by Snee (1974). The split by Sex was added by Friendly (1992a) for didactic purposes.\nThis data set is useful for illustrating various techniques for the analysis of contingency tables, such as the standard chi-squared test or, more generally, log-linear modelling, and graphical methods such as mosaic plots, sieve diagrams or association plots.\n\nhead(HairEyeColor)\n\n, , Sex = Male\n\n       Eye\nHair    Brown Blue Hazel Green\n  Black    32   11    10     3\n  Brown    53   50    25    15\n  Red      10   10     7     7\n  Blond     3   30     5     8\n\n, , Sex = Female\n\n       Eye\nHair    Brown Blue Hazel Green\n  Black    36    9     5     2\n  Brown    66   34    29    14\n  Red      16    7     7     7\n  Blond     4   64     5     8\n\n\ntry to convert table into data frame using as.data.frame.table() or as.data.frame() then store into the df variable\n\ndf <- as.data.frame.table(HairEyeColor)\ndf\n\n    Hair   Eye    Sex Freq\n1  Black Brown   Male   32\n2  Brown Brown   Male   53\n3    Red Brown   Male   10\n4  Blond Brown   Male    3\n5  Black  Blue   Male   11\n6  Brown  Blue   Male   50\n7    Red  Blue   Male   10\n8  Blond  Blue   Male   30\n9  Black Hazel   Male   10\n10 Brown Hazel   Male   25\n11   Red Hazel   Male    7\n12 Blond Hazel   Male    5\n13 Black Green   Male    3\n14 Brown Green   Male   15\n15   Red Green   Male    7\n16 Blond Green   Male    8\n17 Black Brown Female   36\n18 Brown Brown Female   66\n19   Red Brown Female   16\n20 Blond Brown Female    4\n21 Black  Blue Female    9\n22 Brown  Blue Female   34\n23   Red  Blue Female    7\n24 Blond  Blue Female   64\n25 Black Hazel Female    5\n26 Brown Hazel Female   29\n27   Red Hazel Female    7\n28 Blond Hazel Female    5\n29 Black Green Female    2\n30 Brown Green Female   14\n31   Red Green Female    7\n32 Blond Green Female    8\n\n\n\ndf |> \n  ggplot(aes(x = Eye, y = Freq, fill = Sex, label = Freq)) +\n  geom_col(alpha = 0.8, position = \"dodge\", show.legend = FALSE) +\n  geom_text(aes(color = Sex, group = Sex), position = position_dodge(width = 1), vjust = -0.1, show.legend = FALSE) +\n  labs(x = \"Eye Color\", y = \"Frequency\") +\n  facet_wrap(~ Hair, strip.position = c(\"right\")) +\n  scale_y_continuous(limits = c(0,80), breaks = seq(0,80,20)) +\n  theme_bw()\n\n\n\n\n\ndf |> \n  group_by(Hair) |> \n  mutate(Chk = max(Freq) == Freq) |> \n  ggplot(aes(x = Eye, y = Freq, label = Freq, group = Sex)) +\n  geom_col(aes(fill = Chk), color = \"white\", alpha = 0.8, position = \"dodge\", show.legend = FALSE) +\n  geom_text(aes(color = Chk, group = Sex), position = position_dodge(width = 1), vjust = -0.1, show.legend = FALSE) +\n  labs(x = \"Eye Color\", y = \"Frequency\") +\n  facet_wrap(~ Hair, strip.position = c(\"right\")) +\n  scale_y_continuous(limits = c(0,80), breaks = seq(0,80,20)) +\n  scale_fill_manual(values = c(\"gray80\",\"coral\")) +\n  scale_color_manual(values = c(\"gray80\", \"coral\")) +\n  theme_bw()\n\n\n\n\n\ndf |> \n  filter(Sex == \"Male\") |> \n  group_by(Hair) |> \n  mutate(Ratio = Freq / sum(Freq)) |> \n  ggplot(aes(x = Eye, y = Freq, fill = Hair, label = Ratio)) +\n  geom_col(alpha = 0.8) +\n  # geom_text(aes(label = paste(round(Ratio*100,1), \"%\"), color = Hair), vjust = -0.1) +\n  geom_text(aes(label = paste0(scales::percent(round(Ratio,3)),\"\\n\",\"(\",Freq,\")\"), color = Hair), \n            vjust = -0.2, hjust = 0.5, show.legend = FALSE) +\n  labs(x = \"Eye Color\", y = \"Frequency\") +\n  facet_wrap(~ Hair, strip.position = c(\"right\")) +\n  scale_y_continuous(limits = c(0,80), breaks = seq(0,80,20)) +\n  theme_bw()\n\n\n\n\n\ndf |> \n  filter(Sex == \"Female\") |> \n  ggplot(aes(x = Eye, y = Freq, fill = Hair, label = Freq)) +\n  geom_col(alpha = 0.8) +\n  geom_point(color = \"white\", size = 4, show.legend = FALSE) +\n  geom_point(aes(color = Hair), size = 2, show.legend = FALSE) +\n  geom_path(aes(group = Hair, color = Hair), lty = 2, linewidth = 1, show.legend = FALSE) +\n  geom_text(aes(color = Hair), vjust = -1.0, show.legend = FALSE) +\n  labs(x = \"Eye Color\", y = \"Frequency\") +\n  facet_wrap(~ Hair) +\n  scale_y_continuous(limits = c(0,80), breaks = seq(0,80,20)) +\n  theme_bw()\n\n\n\n\n\ndf |> \n  filter(Sex == \"Female\") |> \n  ggplot(aes(x = Eye, y = Freq, fill = Hair, label = Freq)) +\n  geom_col(alpha = 0.8) +\n  geom_point(color = \"white\", size = 4, show.legend = FALSE) +\n  geom_point(aes(color = Hair), size = 2, show.legend = FALSE) +\n  geom_path(aes(group = Hair, color = Hair), lty = 2, linewidth = 1, show.legend = FALSE) +\n  geom_text(aes(color = Hair), vjust = -1.0, show.legend = FALSE) +\n  labs(title = \"Hair and Eye Color of Statistics Students\",\n       subtitle = \"Distribution of hair and eye color and sex in 592 statistics students.\", \n       x = \"Eye Color\", y = \"Frequency\") +\n  facet_wrap(~ Hair) +\n  scale_y_continuous(limits = c(0,80), breaks = seq(0,80,20)) +\n  theme_bw()"
  }
]